## Overview
This project is a self-contained, single-page web application that visually demonstrates the assembly process of our panelized building system using 3D animation. The app focuses on generating and animating the geometry for various structures.

## Tech Stack
- **HTML, Tailwind CSS, Alpine.js**: For UI, layout, and interactivity.
- **Vanilla JavaScript**: For application logic and animation control.
- **Three.js**: For 3D rendering, geometry creation, and animation.

## Project Goals
- Animate the construction of panelized structures, starting from panels stacked on a delivery pallet.
- Sequentially move panels from the stack to the foundation, assembling the structure step by step.
- (Future) Optionally "explode" the structure and cycle through different types.

## Workflow
1. **Input**: Floor plans, elevations, and measurements for structures.
2. **Geometry Generation**: Create Three.js code to procedurally build structures.
3. **Animation**: Animate the assembly of each structure.
4. **Iteration**: (Future) Repeat for all structure types.

# Component Specifications (MVP Focus - 10'x12' Example)
General specifications for components using Three.js. Geometry is constructed programmatically.

## Precise Dimensions (Imperial to Metric)
1" = 0.0254m 1' = 0.3048m


## Foundation
- **Dimensions**: 12'0" × 10'0" × 6" (3.66m × 3.05m × 0.15m)
- **Material**: Concrete slab concept.
- **Three.js Modeling**: Simple geometry representing the slab.

## Wall Panels
- **General**: Represent standard wall panels. Variations exist (e.g., different heights, sloped tops for side walls, door/window openings) and should be modeled in Three.js as needed.
- **Dimensions**: Use specified heights (e.g., 7'3.5" back, 8'6" front) and standard widths (e.g., 48"). Thickness is 5.5".
- **Details**: Include basic visual representation of exterior sheathing and interior framing concept.

## Roof Components
- **Rafters**: Basic representation of 2x6 rafters, spaced appropriately (e.g., 24" OC) with overhangs.
- **Roof Panels/Sheathing**: Geometry covering the rafters.
- **Roofing Material**: Simple representation of corrugated metal panels.

## Panel Alignment & Positioning
- **Guideline:** Wall panel exterior faces must align flush with the foundation's exterior face.

# Panelized Structure Assembly & Animation Specification (Three.js - MVP)

## 1. Overview
Defines the sequence for demonstrating assembly using Three.js animation.

## 2. Core Animation Concept
- **Initial State:** Components start in a "delivery stack".
- **Assembly Animation:** Components animate sequentially from the stack to their final position following the build order.
- **Completion:** View the assembled structure.

## 3. Component Preparation (Three.js)
- **Geometry:** Procedurally generate component geometry.
- **Grouping:** Use groups for logical management.
- **Origin Points:** Define consistent origins.
- **Initial Stack:** Position geometries in the stack.

## 4. Animation Sequence & Style (MVP)
- **Sequence:**
    1.  **Foundation:** Appears/forms on the build site.
    2.  **Wall Assembly:** Wall panels (back, sides, front, including integrated doors/windows) animate from the stack to the foundation.
    3.  **Roof Construction:** Roof components (rafters, panels, roofing) animate into place on top of the walls.
- **Animation Style:**
    - Components move smoothly from stack to position.
    - Use clear, easy-to-follow transitions.

## 5. Camera Movement
- **General:** Start wide, follow the action dynamically (zoom/pan/orbit), end with a view of the completed structure.

## 6. General Animation Principles
- **Timing:** Use smooth easing. Allow brief pauses between major phases.
- **Clarity:** Ensure the sequence clearly demonstrates construction logic.

##  General Workflow
- Create and render a 3D representation of the concrete foundation slab using Three.js.
- Import the OBJ files for the panels for specified for each side. There are alwayus going to be more than 1 panels and the order they are specified in is the order they are positiond starting from left to right if you are facing the interior face of the wall from the origin (0,0,0)
- Import the interior wall components and interior kitchen  and bath components as specified and position them into place with an animation that makes them appear to come from the top down. 
- Import the OBJ files for the roof elements with all of sub compomonents hidden by default. Then animate into view the specified components in the order provided.


